{
   "$schema": "http://json-schema.org/draft-07/schema#",
   "title": "Generative UI Payload",
   "description": "A schema for a declarative UI payload for a generative UI library.",
   "type": "object",
   "properties": {
      "children": {
         "type": "array",
         "$ref": "#/definitions/children"
      }
   },
   "required": ["children"],
   "definitions": {
      "children": {
         "type": "array",
         "description": "An array of UI components to be rendered (can be a nested children of a child component).",
         "items": {
            "oneOf": [
               {"$ref": "#/definitions/table"},
               {"$ref": "#/definitions/chart"},
               {"$ref": "#/definitions/list"},
               {"$ref": "#/definitions/grid"},
               {"$ref": "#/definitions/timeline"},
               {"$ref": "#/definitions/stream"},
               {"$ref": "#/definitions/carousel"},
               {"$ref": "#/definitions/diff"},

               {"$ref": "#/definitions/card"},
               {"$ref": "#/definitions/section"},
               {"$ref": "#/definitions/text"},
               {"$ref": "#/definitions/code-block"},

               {"$ref": "#/definitions/image"},
               {"$ref": "#/definitions/video"},
               {"$ref": "#/definitions/icon"},

               {"$ref": "#/definitions/button"},
               {"$ref": "#/definitions/link"},
               {"$ref": "#/definitions/badge"},
               {"$ref": "#/definitions/progress"},
               {"$ref": "#/definitions/loading"},

               {"$ref": "#/definitions/box"},
               {"$ref": "#/definitions/divider"},
               {"$ref": "#/definitions/tabs"},
               {"$ref": "#/definitions/collapse-block"},

               {"$ref": "#/definitions/reference"},
               {"$ref": "#/definitions/tooltip"}
            ]
         }
      },

      "table": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "table"
            },
            "data": {
               "type": "array",
               "description": "The data to populate the table rows.",
               "items": {
                  "type": "object"
               }
            },
            "columns": {
               "type": "array",
               "description": "An array defining the table columns.",
               "items": {
                  "type": "object",
                  "properties": {
                     "key": {
                        "type": "string"
                     },
                     "header": {
                        "type": "string"
                     }
                  },
                  "required": ["key", "header"]
               }
            },
            "children": {
               "type": "array",
               "description": "Nested UI components to display in the table cells.",
               "items": {
                  "oneOf": [
                     { "$ref": "#/definitions/image" },
                     { "$ref": "#/definitions/button" },
                     { "$ref": "#/definitions/text" },
                     { "$ref": "#/definitions/badge" },
                     { "$ref": "#/definitions/link" }
                  ]
               },
               "required": ["items"]
            }
         },
         "required": ["component", "data", "columns"]
      },
      "chart": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "chart"
            },
            "chart-type": {
               "type": "string",
               "description": "Type of chart to render (e.g., bar, line, pie, scatter).",
               "enum": ["bar", "line", "pie", "doughnut", "scatter", "area", "radar", "heatmap"]
            },
            "data": {
               "type": "object",
               "description": "Chart data payload. Flexible depending on chartType.",
               "properties": {
                  "labels": {
                     "type": "array",
                     "items": { "type": "string" },
                     "description": "Labels for categories or x-axis."
                  },
                  "datasets": {
                     "type": "array",
                     "description": "One or more data series.",
                     "items": {
                        "type": "object",
                        "properties": {
                           "label": { "type": "string" },
                           "data": {
                              "type": "array",
                              "items": { "type": ["number", "object"] },
                              "description": "Values (or objects for scatter/complex data)."
                           },
                           "style": {
                              "type": "object",
                              "description": "Visual style overrides for this dataset.",
                              "additionalProperties": { "type": "string" }
                           }
                        },
                        "required": ["data"]
                     }
                  }
               },
               "required": ["datasets"]
            },
            "options": {
               "type": "object",
               "description": "Chart configuration (scales, legends, tooltips, etc.).",
               "additional-properties": true
            }
         },
         "required": ["component", "chart-type", "data"]
      },
      "list": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "list"
            },
            "type": {
               "type": "string",
               "description": "Type of list to render (e.g., bullets, numbers, checkboxes, etc.)",
               "enum": ["bullets", "numbers", "checkboxes"]
            },
            "data": {
               "type": "array",
               "description": "The data to populate the list items.",
               "items": {}
            },
            "children": {
               "type": "array",
               "description": "Nested UI components to display in the list items.",
               "items": {
                  "oneOf": [
                     { "$ref": "#/definitions/image" },
                     { "$ref": "#/definitions/text" },
                     { "$ref": "#/definitions/badge" },
                     { "$ref": "#/definitions/link" }
                  ]
               },
               "required": ["items"]
            }
         },
         "required": ["component", "type", "data"]
      },
      "grid": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "grid"
            },
            "columns": {
               "type": ["integer", "string"],
               "description": "Number of columns (e.g., 3) or a responsive keyword (e.g., 'auto', 'responsive')."
            },
            "gap": {
               "type": "string",
               "description": "Spacing between grid items (e.g., '8px', '1rem')."
            },
            "children": {
               "type": "array",
               "description": "Nested UI components to display in the grid cells.",
               "items": {
                  "oneOf": [
                     { "$ref": "#/definitions/card" },
                     { "$ref": "#/definitions/image" },
                     { "$ref": "#/definitions/button" },
                     { "$ref": "#/definitions/section" }
                  ]
               },
               "required": ["items"]
            }
         },
         "required": ["component", "children"]
      },
      "timeline": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "timeline"
            },
            "orientation": {
               "type": "string",
               "enum": ["vertical", "horizontal"],
               "default": "vertical",
               "description": "Display orientation of the timeline."
            },
            "items": {
               "type": "array",
               "description": "Ordered list of timeline events.",
               "items": {
                  "type": "object",
                  "properties": {
                     "time": {
                        "type": "string",
                        "description": "Timestamp or label for the event (e.g., '2025-09-03', 'Step 1')."
                     },
                     "title": {
                        "type": "string",
                        "description": "Short title or label for the event."
                     },
                     "description": {
                        "type": "string",
                        "description": "Optional longer description."
                     },
                     "icon": {
                        "$ref": "#/definitions/icon"
                     },
                     "media": {
                        "oneOf": [
                           { "$ref": "#/definitions/image" },
                           { "$ref": "#/definitions/video" }
                        ]
                     },
                     "status": {
                        "type": "string",
                        "enum": ["completed", "active", "upcoming", "default"],
                        "default": "default"
                     },
                     "extra": {
                        "type": "object",
                        "description": "Optional additional metadata (links, tags, etc.)."
                     }
                  },
                  "required": ["title"]
               }
            }
         },
         "required": ["component", "items"]
      },
      "stream": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "stream"
            },
            "direction": {
               "type": "string",
               "enum": ["up", "down"],
               "default": "down",
               "description": "Direction of new items (append at top or bottom)."
            },
            "items": {
               "type": "array",
               "description": "Sequential feed items, newest last (or first if direction=up).",
               "items": {
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string",
                        "description": "Unique identifier for diffing/updating."
                     },
                     "timestamp": {
                        "type": "string",
                        "description": "Optional timestamp or label for the event."
                     },
                     "author": {
                        "type": "string",
                        "description": "Optional source/actor of the item (e.g., 'AI', 'User')."
                     },
                     "content": {
                        "oneOf": [
                           { "type": "string" },
                           { "$ref": "#/definitions/text" },
                           { "$ref": "#/definitions/card" },
                           { "$ref": "#/definitions/image" },
                           { "$ref": "#/definitions/video" },
                           { "$ref": "#/definitions/code-block" }
                        ],
                        "description": "Content of the stream item (can be plain text or components)."
                     },
                     "status": {
                        "type": "string",
                        "enum": ["pending", "completed", "error"],
                        "default": "completed",
                        "description": "Useful for AI streaming or partial responses."
                     },
                     "extra": {
                        "type": "object",
                        "description": "Optional metadata (tags, reactions, attachments, etc.)."
                     }
                  },
                  "required": ["content"]
               }
            }
         },
         "required": ["component", "items"]
      },
      "carousel": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "carousel"
            },
            "autoplay": {
               "type": "boolean",
               "default": false,
               "description": "Whether the carousel auto-rotates through items."
            },
            "interval": {
               "type": "number",
               "default": 5000,
               "description": "Autoplay interval in milliseconds."
            },
            "items": {
               "type": "array",
               "description": "Slides in the carousel.",
               "items": {
                  "oneOf": [
                     { "$ref": "#/definitions/image" },
                     { "$ref": "#/definitions/card" },
                     { "$ref": "#/definitions/video" }
                  ]
               }
            }
         },
         "required": ["component", "items"]
      },
      "diff": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "Diff"
            },
            "mode": {
               "type": "string",
               "enum": ["unified", "split", "inline"],
               "default": "unified",
               "description": "How to display the diff (unified = inline with +/- markers, split = side-by-side)."
            },
            "language": {
               "type": "string",
               "description": "Optional programming language for syntax highlighting (if content is code)."
            },
            "before": {
               "type": "string",
               "description": "Original content."
            },
            "after": {
               "type": "string",
               "description": "Updated content."
            }
         },
         "required": ["component", "before", "after"]
      },

      "card": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "card"
            },
            "title": {
               "type": "string",
               "description": "Optional title for the card."
            },
            "children": {
               "type": "array",
               "description": "Nested UI components inside this card.",
               "items": { "$ref": "#/definitions/children" }
            }
         },
         "required": ["component", "title", "children"]
      },
      "section": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "section"
            },
            "title": {
               "type": "string",
               "description": "Optional title for the section."
            },
            "children": {
               "type": "array",
               "description": "Nested UI components inside this section.",
               "items": { "$ref": "#/definitions/children" }
            }
         },
         "required": ["component"]
      },
      "text": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "text"
            },
            "variant": {
               "type": "string",
               "enum": [
                  "h1", "h2", "h3", "h4", "h5", "h6",
                  "subtitle", "body", "caption", "overline",
                  "highlight-info", "highlight-warning",
                  "highlight-error", "highlight-success",
                  "highlight-accent"
               ],
               "default": "body",
               "description": "Text style or highlight type."
            },
            "text": {
               "type": "string",
               "description": "The textual content."
            }
         },
         "required": ["component", "text"]
      },
      "code-block": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "code-block"
            },
            "language": {
               "type": "string",
               "description": "Programming language for syntax highlighting."
            },
            "value": {
               "type": "string",
               "description": "Source code content."
            },
            "line-numbers": {
               "type": "boolean",
               "default": false,
               "description": "Whether to display line numbers."
            }
         },
         "required": ["component", "value"]
      },

      "image": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "image"
            },
            "src": {
               "type": "string",
               "description": "The image source URL."
            },
            "alt": {
               "type": "string",
               "description": "Alternative text for accessibility."
            },
            "caption": {
               "type": "string",
               "description": "Optional caption text displayed with the image."
            },
            "fit": {
               "type": "string",
               "enum": ["cover", "contain", "fill", "none", "scale-down"],
               "default": "contain",
               "description": "How the image should be resized to fit its container."
            }
         },
         "required": ["component", "src"]
      },
      "video": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "video"
            },
            "src": {
               "type": "string",
               "description": "The video source URL."
            },
            "poster": {
               "type": "string",
               "description": "Image to show before the video plays."
            },
            "autoplay": {
               "type": "boolean",
               "default": false
            },
            "loop": {
               "type": "boolean",
               "default": false
            },
            "controls": {
               "type": "boolean",
               "default": true
            },
            "muted": {
               "type": "boolean",
               "default": false
            }
         },
         "required": ["component", "src"]
      },
      "icon": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "icon"
            },
            "name": {
               "type": "string",
               "description": "The icon identifier (e.g., 'search', 'close', 'star')."
            },
            "variant": {
               "type": "string",
               "enum": ["outlined", "filled", "rounded", "sharp"],
               "default": "filled",
               "description": "Icon style variant."
            },
            "size": {
               "type": "string",
               "description": "Optional size (e.g., 'small', 'medium', 'large', '24px')."
            }
         },
         "required": ["component", "name"]
      },

      "button": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "button"
            },
            "label": {
               "type": "string",
               "description": "The button label."
            },
            "action": {
               "type": "string",
               "description": "A string representing an action to be performed on click."
            }
         },
         "required": ["component", "label"]
      },
      "link": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "link"
            },
            "href": {
               "type": "string",
               "description": "The URL or target destination."
            },
            "target": {
               "type": "string",
               "enum": ["_self", "_blank", "_parent", "_top"],
               "default": "_self",
               "description": "Specifies where to open the linked document."
            },
            "children": {
               "type": "array",
               "description": "Components to render inside the link (e.g., Text, Icon, Image).",
               "items": {
                  "oneOf": [
                     { "$ref": "#/definitions/text" },
                     { "$ref": "#/definitions/icon" },
                     { "$ref": "#/definitions/image" },
                     { "$ref": "#/definitions/badge" }
                  ]
               }
            }
         },
         "required": ["component", "href", "children"]
      },
      "badge": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "badge"
            },
            "text": {
               "type": "string",
               "description": "Text content inside the badge."
            },
            "variant": {
               "type": "string",
               "description": "Visual style of the badge.",
               "enum": ["info", "success", "warning", "error", "neutral"],
               "default": "neutral"
            },
            "icon": {
               "$ref": "#/definitions/icon",
               "description": "Optional icon displayed alongside the badge text.",
               "position": {
                  "type": "string",
                  "description": "Position of the icon relative to the badge text.",
                  "enum": ["left", "right"],
                  "size": "10px"
               }
            }
         },
         "required": ["component", "text"]
      },
      "progress": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "progress"
            },
            "value": {
               "type": "number",
               "minimum": 0,
               "maximum": 100,
               "description": "Current progress value as a percentage (0–100)."
            },
            "variant": {
               "type": "string",
               "enum": ["linear", "circular"],
               "default": "linear",
               "description": "Type of progress indicator."
            },
            "label": {
               "type": "string",
               "description": "Optional label to display alongside progress."
            },
            "indeterminate": {
               "type": "boolean",
               "default": false,
               "description": "If true, shows an indeterminate animation instead of a specific value."
            }
         },
         "required": ["component"]
      },
      "loading": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "loading"
            },
            "message": {
               "type": "string",
               "description": "Optional loading message."
            },
            "variant": {
               "type": "string",
               "enum": ["spinner", "skeleton", "dots", "bar"],
               "default": "spinner",
               "description": "Visual representation of the loading state."
            }
         },
         "required": ["component"]
      },

      "box": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "box"
            },
            "children": {
               "type": "array",
               "description": "Arbitrary components wrapped inside this container.",
               "items": { "$ref": "#/definitions/children" }
            }
         },
         "required": ["component"]
      },
      "divider": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "divider"
            },
            "orientation": {
               "type": "string",
               "enum": ["horizontal", "vertical"],
               "default": "horizontal",
               "description": "Divider orientation."
            },
            "label": {
               "type": "string",
               "description": "Optional text label centered on the divider."
            }
         },
         "required": ["component"]
      },
      "tabs": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "tabs"
            },
            "tabs": {
               "type": "array",
               "description": "List of tab definitions.",
               "items": {
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string",
                        "description": "Unique identifier for the tab."
                     },
                     "label": {
                        "type": "string",
                        "description": "Visible label of the tab."
                     },
                     "content": {
                        "type": "array",
                        "description": "UI components to display when this tab is active.",
                        "items": { "$ref": "#" }
                     }
                  },
                  "required": ["id", "label", "content"]
               }
            },
            "active-tab": {
               "type": "string",
               "description": "The id of the currently active tab."
            }
         },
         "required": ["component", "tabs"]
      },
      "collapse-block": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "collapse-block"
            },
            "title": {
               "type": "string",
               "description": "Header text displayed on the collapsible block."
            },
            "collapsed": {
               "type": "boolean",
               "default": true,
               "description": "Whether the block is initially collapsed."
            },
            "content": {
               "type": "array",
               "description": "Components displayed when expanded.",
               "items": { "$ref": "#" }
            }
         },
         "required": ["component", "title", "content"]
      },

      "reference": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "reference"
            },
            "label": {
               "type": "string",
               "description": "Text or identifier for the reference marker."
            },
            "target": {
               "type": "string",
               "description": "External link, citation key, or internal anchor."
            },
            "description": {
               "type": "string",
               "description": "Optional description or citation details."
            }
         },
         "required": ["component", "label", "target"]
      },
      "tooltip": {
         "type": "object",
         "properties": {
            "component": {
               "type": "string",
               "const": "tooltip"
            },
            "content": {
               "type": "string",
               "description": "Text or markdown content of the tooltip."
            },
            "placement": {
               "type": "string",
               "enum": ["top", "right", "bottom", "left"],
               "default": "top",
               "description": "Preferred placement relative to the trigger element."
            },
            "trigger": {
               "type": "array",
               "description": "Components that act as the tooltip trigger.",
               "items": { "$ref": "#" }
            }
         },
         "required": ["component", "content", "trigger"]
      }
   }
}
